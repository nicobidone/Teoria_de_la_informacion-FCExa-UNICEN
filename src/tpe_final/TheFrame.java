/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package tpe_final;
import Acciones.Huffman;
import gestionDatos.HuffmanCod;
import Acciones.Load;
import Acciones.ProbsDistribution;
import Acciones.RLC;
import Acciones.Reconstruir;
import Acciones.Save;
import gestionDatos.Bits;
import gestionDatos.GestorImagen;
import java.awt.image.BufferedImage;
import java.io.*;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;

public class TheFrame extends javax.swing.JFrame {

    final int COLORES = 256;
    
    BufferedImage   bytesImageA, bytesImageB, bytesImageC, bytesImageP;     
    
    Double[] distribucion = new Double[COLORES];
    String[] codificacion = new String[COLORES];
    
    ArrayList<HuffmanCod> huffman;
    ArrayList<Integer> resultadoDecodificacion = new ArrayList();
    
    Integer alto, ancho;
    
    public TheFrame() {
        initComponents();
        bytesImageP = new BufferedImage(100, 100, BufferedImage.TYPE_INT_RGB);
        // HARD-CODE PARA EVITAR EL EXPLORADOR. DIRECTAMENTE AGARRA EL ARCHIVO DADO POR EL PATH
        /*
        archivo = new File("C:\\Users\\nicob\\Documents\\imagen1.bmp");
        bytesImageA = GestorImagen.AbrirImagen(archivo);
        archivo = new File("C:\\Users\\nicob\\Documents\\imagen2.bmp");
        bytesImageB = GestorImagen.AbrirImagen(archivo);
        archivo = new File("C:\\Users\\nicob\\Documents\\imagen3.bmp");
        bytesImageC = GestorImagen.AbrirImagen(archivo);
        archivo = new File("C:\\Users\\nicob\\Documents\\Abstracto4.bmp")
        archivo = new File("C:\\Users\\nicob\\Documents\\bariloche4.bmp");        
        archivo = new File("C:\\Users\\nicob\\Documents\\imagen4.bmp");
        bytesImageP = GestorImagen.AbrirImagen(archivo);
        */      
        for (int i = 0; i < 256; i++) distribucion[i] = 0.0;
        for (int i = 0; i < 256; i++) codificacion[i] = " ";
        alto = 0;
        ancho = 0;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jB_loadA1 = new javax.swing.JButton();
        jB_loadB = new javax.swing.JButton();
        jB_loadC = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jL_imgA = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jL_imgB = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jL_imgC = new javax.swing.JLabel();
        jB_loadA = new javax.swing.JButton();
        jB_media = new javax.swing.JButton();
        jB_dsvEstnd = new javax.swing.JButton();
        jB_histograma = new javax.swing.JButton();
        jB_generarPan = new javax.swing.JButton();
        jTF_FactorCorr = new javax.swing.JTextField();
        jL_factorCorr = new javax.swing.JLabel();
        jL_numCols = new javax.swing.JLabel();
        jTF_numCols = new javax.swing.JTextField();
        jB_savePan = new javax.swing.JButton();
        jB_getHuffCode = new javax.swing.JButton();
        jL_HuffmanCode = new javax.swing.JLabel();
        jB_getHuffCodeLong = new javax.swing.JButton();
        jB_saveHuffCode = new javax.swing.JButton();
        jL_distribucion = new javax.swing.JLabel();
        jB_SaveDistribucion = new javax.swing.JButton();
        jB_loadDistribucion = new javax.swing.JButton();
        jL_compresion = new javax.swing.JLabel();
        jB_compHuffman = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jB_descompHuffman = new javax.swing.JButton();
        jB_reconstHuffman = new javax.swing.JButton();
        jB_compRLC = new javax.swing.JButton();
        jB_verPan = new javax.swing.JButton();
        jS_RLC = new javax.swing.JSlider();
        jB_saveSizePan = new javax.swing.JButton();
        jB_loadSizePan = new javax.swing.JButton();

        jB_loadA1.setText("Imagen A");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jB_loadB.setText("Imagen B");
        jB_loadB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_loadBActionPerformed(evt);
            }
        });

        jB_loadC.setText("Imagen C");
        jB_loadC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_loadCActionPerformed(evt);
            }
        });

        jL_imgA.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jL_imgA.setMinimumSize(new java.awt.Dimension(403, 428));
        jScrollPane1.setViewportView(jL_imgA);

        jL_imgB.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jL_imgB.setMinimumSize(new java.awt.Dimension(403, 428));
        jScrollPane2.setViewportView(jL_imgB);

        jScrollPane3.setHorizontalScrollBar(null);

        jL_imgC.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jL_imgC.setMinimumSize(new java.awt.Dimension(403, 428));
        jScrollPane3.setViewportView(jL_imgC);

        jB_loadA.setText("Imagen A");
        jB_loadA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_loadAActionPerformed(evt);
            }
        });

        jB_media.setText("Media");
        jB_media.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_mediaActionPerformed(evt);
            }
        });

        jB_dsvEstnd.setText("Desvio estándar");
        jB_dsvEstnd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_dsvEstndActionPerformed(evt);
            }
        });

        jB_histograma.setText("Histograma");
        jB_histograma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_histogramaActionPerformed(evt);
            }
        });

        jB_generarPan.setText("Generar");
        jB_generarPan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_generarPanActionPerformed(evt);
            }
        });

        jTF_FactorCorr.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTF_FactorCorr.setText("1.0");

        jL_factorCorr.setText("Factor correlación:");

        jL_numCols.setText("Número de columnas:");

        jTF_numCols.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTF_numCols.setText("70");

        jB_savePan.setText("Guardar panorámica");
        jB_savePan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_savePanActionPerformed(evt);
            }
        });

        jB_getHuffCode.setText("Generar");
        jB_getHuffCode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_getHuffCodeActionPerformed(evt);
            }
        });

        jL_HuffmanCode.setText("Código de Huffman:");

        jB_getHuffCodeLong.setText("Longitud media");
        jB_getHuffCodeLong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_getHuffCodeLongActionPerformed(evt);
            }
        });

        jB_saveHuffCode.setText("Guardar códigos");
        jB_saveHuffCode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_saveHuffCodeActionPerformed(evt);
            }
        });

        jL_distribucion.setText("Distribución de probabilidades:");

        jB_SaveDistribucion.setText("Guardar distribución");
        jB_SaveDistribucion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_SaveDistribucionActionPerformed(evt);
            }
        });

        jB_loadDistribucion.setText("Cargar distribución");
        jB_loadDistribucion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_loadDistribucionActionPerformed(evt);
            }
        });

        jL_compresion.setText("Compresión:");

        jB_compHuffman.setText("Codificar Huffman");
        jB_compHuffman.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_compHuffmanActionPerformed(evt);
            }
        });

        jLabel1.setText("Panorámica:");

        jB_descompHuffman.setText("Decodificar Huffman");
        jB_descompHuffman.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_descompHuffmanActionPerformed(evt);
            }
        });

        jB_reconstHuffman.setText("Reconstruir imagen");
        jB_reconstHuffman.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_reconstHuffmanActionPerformed(evt);
            }
        });

        jB_compRLC.setText("Comprimir RLC");
        jB_compRLC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_compRLCActionPerformed(evt);
            }
        });

        jB_verPan.setText("Ver");
        jB_verPan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_verPanActionPerformed(evt);
            }
        });

        jS_RLC.setMajorTickSpacing(5);
        jS_RLC.setPaintLabels(true);
        jS_RLC.setPaintTicks(true);
        jS_RLC.setSnapToTicks(true);
        jS_RLC.setValue(0);

        jB_saveSizePan.setText("Guardar dimensiones");
        jB_saveSizePan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_saveSizePanActionPerformed(evt);
            }
        });

        jB_loadSizePan.setText("Cargar dimensiones");
        jB_loadSizePan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_loadSizePanActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jB_loadA))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jB_loadB))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jB_loadC)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jB_generarPan)
                        .addGap(10, 10, 10)
                        .addComponent(jB_verPan)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jL_factorCorr)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTF_FactorCorr, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jL_numCols)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTF_numCols, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jB_savePan)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jB_saveSizePan))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jL_distribucion)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jB_media)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jB_dsvEstnd)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jB_histograma)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jB_SaveDistribucion)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jB_loadDistribucion))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jL_HuffmanCode)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jB_getHuffCode)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jB_getHuffCodeLong, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jB_saveHuffCode))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jL_compresion)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jB_compRLC)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jS_RLC, javax.swing.GroupLayout.PREFERRED_SIZE, 447, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jB_compHuffman)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jB_descompHuffman)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jB_reconstHuffman)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jB_loadSizePan)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jB_loadB)
                    .addComponent(jB_loadA)
                    .addComponent(jB_loadC))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 448, Short.MAX_VALUE)
                    .addComponent(jScrollPane2)
                    .addComponent(jScrollPane3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jB_generarPan)
                    .addComponent(jTF_FactorCorr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jL_factorCorr)
                    .addComponent(jL_numCols)
                    .addComponent(jTF_numCols, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jB_savePan)
                    .addComponent(jLabel1)
                    .addComponent(jB_verPan)
                    .addComponent(jB_saveSizePan))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jB_media)
                    .addComponent(jB_dsvEstnd)
                    .addComponent(jB_histograma)
                    .addComponent(jL_distribucion)
                    .addComponent(jB_SaveDistribucion)
                    .addComponent(jB_loadDistribucion))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jB_getHuffCode)
                    .addComponent(jL_HuffmanCode)
                    .addComponent(jB_getHuffCodeLong)
                    .addComponent(jB_saveHuffCode))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jB_compHuffman)
                    .addComponent(jL_compresion)
                    .addComponent(jB_descompHuffman)
                    .addComponent(jB_reconstHuffman)
                    .addComponent(jB_loadSizePan))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jB_compRLC)
                        .addContainerGap())
                    .addComponent(jS_RLC, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
	
    // Cargar imagenes
	
    private void jB_loadBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB_loadBActionPerformed
        // TODO add your handling code here:
        
        bytesImageB = new Load().Image(jL_imgB, this);
        
    }//GEN-LAST:event_jB_loadBActionPerformed

    private void jB_loadCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB_loadCActionPerformed
        // TODO add your handling code here:
        
        bytesImageC = new Load().Image(jL_imgC, this);        
        
    }//GEN-LAST:event_jB_loadCActionPerformed

    private void jB_loadAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB_loadAActionPerformed
        // TODO add your handling code here:
        
        bytesImageA = new Load().Image(jL_imgA, this);
    }//GEN-LAST:event_jB_loadAActionPerformed

    // Panoramica
	
    private void jB_generarPanActionPerformed(java.awt.event.ActionEvent evt) {                                              
        // TODO add your handling code here:
        
        Double corr = Double.parseDouble(jTF_FactorCorr.getText());
        Integer cols = Integer.parseInt(jTF_numCols.getText());
        if (bytesImageA != null && bytesImageB != null && bytesImageC != null)
            bytesImageP = new Panoramica().obtener_panoramica(bytesImageA, bytesImageB, bytesImageC, corr, cols);
        ancho = bytesImageP.getWidth();
        alto = bytesImageP.getHeight();
        JOptionPane.showMessageDialog(null, "Panorámica generada");        
    }                                              

    private void jB_verPanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB_verPanActionPerformed
        // TODO add your handling code here:
        if (bytesImageP == null)
            JOptionPane.showMessageDialog(null, "Factor de correlación erroneo");        
        ResultFrame ventana = new ResultFrame(bytesImageP);
        ventana.setLocationRelativeTo(null);
        ventana.setVisible(true);
    }//GEN-LAST:event_jB_verPanActionPerformed
	
    private void jB_mediaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB_mediaActionPerformed
        // TODO add your handling code here:
        
        Double media = new Indicador().media_mat(bytesImageP, 0, bytesImageP.getWidth());               
        JOptionPane.showMessageDialog(null, "Media de la distribución: " +"\n"+ media);
    }//GEN-LAST:event_jB_mediaActionPerformed

    private void jB_dsvEstndActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB_dsvEstndActionPerformed
        // TODO add your handling code here:
        
        Double desvio = new Indicador().desvio_mat(bytesImageP, 0, bytesImageP.getWidth());
        JOptionPane.showMessageDialog(null, "Desvio estándar de la distribución: " +"\n"+ desvio);
    }//GEN-LAST:event_jB_dsvEstndActionPerformed

    private void jB_histogramaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB_histogramaActionPerformed
        // TODO add your handling code here:
        
        distribucion = new ProbsDistribution().generar(bytesImageP,COLORES);
        for (Double distribucion1 : distribucion) {
            System.out.println(String.format("%.7f", distribucion1));
        }
        Histograma histograma = new Histograma(distribucion);
    }//GEN-LAST:event_jB_histogramaActionPerformed

    private void jB_savePanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB_savePanActionPerformed
        // TODO add your handling code here:
        new Save().Image(this, bytesImageP);
    }//GEN-LAST:event_jB_savePanActionPerformed
	
    // Distribucion de probabilidades

    private void jB_SaveDistribucionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB_SaveDistribucionActionPerformed
        // TODO add your handling code here:
        distribucion = new ProbsDistribution().generar(bytesImageP, COLORES);
        
        String texto = "";
        //texto += "Distribución de probabilidades: \n";
        for (int i = 0; i < COLORES; i++) {
            texto += String.format("%1$3d", i) + distribucion[i].toString() + "\n";   
        }
        
        new Save().Text(this, texto, "Guardar distribución");
    }//GEN-LAST:event_jB_SaveDistribucionActionPerformed

    private void jB_loadDistribucionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB_loadDistribucionActionPerformed
        // TODO add your handling code here:
        BufferedReader archivoTexto = new Load().Text(this);
        try {
            for (int i = 0; i < COLORES; i++){
                String temp = archivoTexto.readLine();
                distribucion[i] = Double.parseDouble(temp.substring(3));
            }
        } 
        catch (IOException ex) {
            Logger.getLogger(TheFrame.class.getName()).log(Level.SEVERE, null, ex);            
        }
        JOptionPane.showMessageDialog(null, "Distribución de probabilidades cargada");        
    }//GEN-LAST:event_jB_loadDistribucionActionPerformed
	
    // Huffman

    private void jB_getHuffCodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB_getHuffCodeActionPerformed
        // TODO add your handling code here:
        
        if (new Indicador().media_vect(distribucion).equals(0.0))
            distribucion = new ProbsDistribution().generar(bytesImageP,COLORES);        
        huffman = new Huffman().obtener(distribucion, COLORES);
        for (int i = 0; i < huffman.size(); i++){
            codificacion[huffman.get(i).getId()] = huffman.get(i).getCodString();
        }  
        JOptionPane.showMessageDialog(null, "Codigo Huffman generado exitosamente");
        
    }//GEN-LAST:event_jB_getHuffCodeActionPerformed

    private void jB_getHuffCodeLongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB_getHuffCodeLongActionPerformed
        // TODO add your handling code here:
        
        Double longitud = 0.0;
        for (int x = 0; x < huffman.size(); x++){
            longitud = longitud + huffman.get(x).getValor()*huffman.get(x).getCod().size();
            //System.out.println(String.format("%.7f",huffman.get(x).getValor())+" * "+huffman.get(x).getCod().length());
        }
        JOptionPane.showMessageDialog(null, "Longitud media del código Huffman: " +"\n"+ longitud);
    }//GEN-LAST:event_jB_getHuffCodeLongActionPerformed

    private void jB_saveHuffCodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB_saveHuffCodeActionPerformed
        // TODO add your handling code here:
        String texto = "";
        //texto += "Códigos de Huffman para la distribución: \n";
        for (int i = 0; i < 256; i++){
            if (!" ".equals(codificacion[i]))
            texto += String.format("%1$3d",i)+" "+codificacion[i]+" \n";
        }
        new Save().Text(this, texto, "Guardar códigos de Huffman");
    }//GEN-LAST:event_jB_saveHuffCodeActionPerformed
	
	// Compresion
	
    private void jB_compHuffmanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB_compHuffmanActionPerformed
        // TODO add your handling code here:
   
        ArrayList<Integer> listaValoresRGB = GestorImagen.fromImageToRGBList(bytesImageP);
        String texto = Bits.generarCodificacion(listaValoresRGB, codificacion);
        new Save().TextCont(this, texto, "Guardar codificacion a nivel bit");
    }//GEN-LAST:event_jB_compHuffmanActionPerformed

    private void jB_descompHuffmanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB_descompHuffmanActionPerformed
        // TODO add your handling code here:
        
        String linea = new Load().TextCont(this);
        resultadoDecodificacion = new Bits().generarDecodificacion(linea, codificacion);
        JOptionPane.showMessageDialog(null, "Decodificacion exitosa");
    }//GEN-LAST:event_jB_descompHuffmanActionPerformed

    private void jB_reconstHuffmanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB_reconstHuffmanActionPerformed
        // TODO add your handling code here:
        
        bytesImageP = new Reconstruir().Imagen(resultadoDecodificacion, ancho, alto);
        JOptionPane.showMessageDialog(null, "Imagen reconstruida");
    }//GEN-LAST:event_jB_reconstHuffmanActionPerformed

    private void jB_compRLCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB_compRLCActionPerformed
        // TODO add your handling code here:  
        
        bytesImageP = new RLC().comprimir(jS_RLC.getValue(), bytesImageP);
        JOptionPane.showMessageDialog(null, "Imagen comprimida");
    }//GEN-LAST:event_jB_compRLCActionPerformed

    private void jB_saveSizePanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB_saveSizePanActionPerformed
        // TODO add your handling code here:
        String texto = "";
        texto += bytesImageP.getWidth()+"\n";
        texto += bytesImageP.getHeight()+"\n";
        new Save().Text(this, texto, "Guardar dimensiones de la imagen");
    }//GEN-LAST:event_jB_saveSizePanActionPerformed

    private void jB_loadSizePanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB_loadSizePanActionPerformed
        // TODO add your handling code here:
        BufferedReader archivoTexto = new Load().Text(this);
        try {
            ancho = Integer.parseInt(archivoTexto.readLine());
            alto = Integer.parseInt(archivoTexto.readLine());
        } 
        catch (IOException ex) {
            Logger.getLogger(TheFrame.class.getName()).log(Level.SEVERE, null, ex);            
        }
        System.out.println(ancho+" "+alto);
    }//GEN-LAST:event_jB_loadSizePanActionPerformed

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TheFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TheFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TheFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TheFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TheFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jB_SaveDistribucion;
    private javax.swing.JButton jB_compHuffman;
    private javax.swing.JButton jB_compRLC;
    private javax.swing.JButton jB_descompHuffman;
    private javax.swing.JButton jB_dsvEstnd;
    private javax.swing.JButton jB_generarPan;
    private javax.swing.JButton jB_getHuffCode;
    private javax.swing.JButton jB_getHuffCodeLong;
    private javax.swing.JButton jB_histograma;
    private javax.swing.JButton jB_loadA;
    private javax.swing.JButton jB_loadA1;
    private javax.swing.JButton jB_loadB;
    private javax.swing.JButton jB_loadC;
    private javax.swing.JButton jB_loadDistribucion;
    private javax.swing.JButton jB_loadSizePan;
    private javax.swing.JButton jB_media;
    private javax.swing.JButton jB_reconstHuffman;
    private javax.swing.JButton jB_saveHuffCode;
    private javax.swing.JButton jB_savePan;
    private javax.swing.JButton jB_saveSizePan;
    private javax.swing.JButton jB_verPan;
    private javax.swing.JLabel jL_HuffmanCode;
    private javax.swing.JLabel jL_compresion;
    private javax.swing.JLabel jL_distribucion;
    private javax.swing.JLabel jL_factorCorr;
    private javax.swing.JLabel jL_imgA;
    private javax.swing.JLabel jL_imgB;
    private javax.swing.JLabel jL_imgC;
    private javax.swing.JLabel jL_numCols;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JSlider jS_RLC;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextField jTF_FactorCorr;
    private javax.swing.JTextField jTF_numCols;
    // End of variables declaration//GEN-END:variables
}
